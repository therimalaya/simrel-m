coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
select(mdl, minerror, trueBeta, sigma) %>%
do(with(., pmap(
list(mdl, minerror, trueBeta, sigma),
getPredErr, use.formula = TRUE
)))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
select(mdl, minerror, trueBeta, sigma) %>%
do(with(., pmap(
list(mdl, minerror, trueBeta, sigma),
function(mdl, minerr, trueBeta, sigma) {
getPredErr(mdl, minerr, tureBeta, sigma, use.formula = TRUE)
}
)))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
select(mdl, minerror, trueBeta, sigma) %>%
do(with(., pmap(
list(mdl, minerror, trueBeta, sigma),
function(mdl, minerr, trueBeta, sigma) {
browser()
getPredErr(mdl, minerr, tureBeta, sigma, use.formula = TRUE)
}
)))
mdl
minerr
tureBeta
trueBeta
sigma
getPredErr(mdl, minerr, trueBeta, sigma, use.formula = TRUE)
source('~/Dropbox/Papers/01-simrel-m/scripts/00-function.r')
getPredErr(mdl, minerr, trueBeta, sigma, use.formula = TRUE)
out
cbind(comp = 0:(length(out) - 1), out)
source('~/Dropbox/Papers/01-simrel-m/scripts/00-function.r')
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(
with(., pmap(
list(mdl, minerror, trueBeta, sigma, testData),
getPredErr, use.formula = TRUE
))
) %>% unnest()
# transmute(
#   pred_err_norm = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   ),
#   pred_err = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   )
}, .id = "Model")
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
if(mdl == "PCR") browser()
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(
with(., pmap(
list(mdl, minerror, trueBeta, sigma, testData),
getPredErr, use.formula = TRUE
))
) %>% unnest()
# transmute(
#   pred_err_norm = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   ),
#   pred_err = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   )
}, .id = "Model")
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
if(mdl == "PCR") browser()
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(
with(., pmap(
list(mdl, minerror, trueBeta, sigma, testData),
getPredErr, use.formula = TRUE
))
) %>% unnest()
# transmute(
#   pred_err_norm = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   ),
#   pred_err = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   )
}, .id = "Model")
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
if(mdl == "OLS") browser()
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(
with(., pmap(
list(mdl, minerror, trueBeta, sigma, testData),
getPredErr, use.formula = TRUE
))
) %>% unnest()
# transmute(
#   pred_err_norm = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   ),
#   pred_err = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   )
}, .id = "Model")
coef
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(
with(., pmap(
list(mdl, minerror, trueBeta, sigma, testData),
getPredErr, use.formula = TRUE
))
) %>% unnest()
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue)
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue)
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
getPredErr(mdl, minerror, trueBeta, sigma)
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
with(., getPredErr(mdl, minerror, trueBeta, sigma))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
getPredErr(mdl, minerror, trueBeta, sigma)
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue)
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
list(getPredErr(mdl, minerror, trueBeta, sigma))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
as.list(getPredErr(mdl, minerror, trueBeta, sigma))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
getPredErr(mdl, minerror, trueBeta, sigma)
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
list(getPredErr(mdl, minerror, trueBeta, sigma))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
pmap(list(mdl, minerror, trueBeta, sigma), getPredErr)
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
with(., pmap(list(mdl, minerror, trueBeta, sigma), getPredErr))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
with(., pmap(list(mdl, minerror, trueBeta, sigma), getPredErr))
source('~/Dropbox/Papers/01-simrel-m/scripts/00-function.r')
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
with(., pmap(list(mdl, minerror, trueBeta, sigma), getPredErr))
out
out %>%
mutate(1:n())
out %>%
mutate(0:(n() - 1))
out %>%
mutate(comp = 0:(n() - 1))
mutate(out, comp = 0:(n() - 1))
source('~/Dropbox/Papers/01-simrel-m/scripts/00-function.r')
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
if(mdl == "OLS") browser()
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(
with(., pmap(
list(mdl, minerror, trueBeta, sigma, testData),
getPredErr, use.formula = TRUE
))
) %>% unnest()
# transmute(
#   pred_err_norm = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   ),
#   pred_err = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   )
}, .id = "Model")
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(
with(., pmap(
list(mdl, minerror, trueBeta, sigma, testData),
getPredErr, use.formula = TRUE
))
) %>% unnest()
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue)
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue)
?d
?do
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
with(., do(getPredErr(mdl, minerror, trueBeta, sigma)))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
with(., do(list(getPredErr(mdl, minerror, trueBeta, sigma))))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., getPredErr(mdl, minerror, trueBeta, sigma))))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., getPredErr(mdl, minerror, trueBeta, sigma)))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., getPredErr(mdl, minerror, trueBeta, sigma)))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap(list(mdl, minerror, trueBeta, sigma), getPredErr)))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
with(., pmap(list(mdl, minerror, trueBeta, sigma), getPredErr))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
with(., pmap(list(mdl, minerror, trueBeta, sigma), getPredErr))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap(list(mdl, minerror, trueBeta, sigma), getPredErr)))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr)))
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr)))
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
if(mdl == "OLS") browser()
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr))) %>%
unnest()
# transmute(
#   pred_err_norm = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   ),
#   pred_err = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   )
}, .id = "Model")
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr))) %>%
unnest()
# transmute(
#   pred_err_norm = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   ),
#   pred_err = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   )
}, .id = "Model")
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr)))
# transmute(
#   pred_err_norm = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   ),
#   pred_err = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   )
}, .id = "Model")
predErr
source('~/Dropbox/Papers/01-simrel-m/scripts/00-function.r')
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr)))
# transmute(
#   pred_err_norm = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   ),
#   pred_err = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   )
}, .id = "Model")
predErr
predErr %>%
gather("ErrorType", value = "pred_err", without_norm, with_norm)
predErr %>%
gather("ErrorType", value = "pred_err", without_norm, with_norm) %>%
group_by(Model, design, comp, ErrorType) %>%
summarise(
pred_err = mean(pred_err)
)
predErr %>%
gather("ErrorType", value = "pred_err", without_norm, with_norm) %>%
group_by(Model, design, comp, ErrorType) %>%
summarise(
pred_err = mean(pred_err)
) %>%
ggplot(aes(comp, pred_err, color = ErrorType)) +
geom_line() + geom_point() +
facet_grid(design ~ Model)
predErr %>%
mutate(without_norm = sqrt(without_norm)) %>%
gather("ErrorType", value = "pred_err", without_norm, with_norm) %>%
group_by(Model, design, comp, ErrorType) %>%
summarise(
pred_err = mean(pred_err)
) %>%
ggplot(aes(comp, pred_err, color = ErrorType)) +
geom_line() + geom_point() +
facet_grid(design ~ Model)
predErr %>%
mutate(without_norm = sqrt(without_norm)) %>%
gather("ErrorType", value = "pred_err", without_norm, with_norm) %>%
group_by(Model, design, comp, ErrorType) %>%
summarise(
pred_err = mean(pred_err)
) %>%
ggplot(aes(comp, pred_err, color = ErrorType)) +
geom_line() + geom_point() +
facet_grid(design ~ Model) +
theme(legend.position = "top")
source('~/Dropbox/Papers/01-simrel-m/scripts/00-function.r')
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr)))
# transmute(
#   pred_err_norm = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   ),
#   pred_err = pmap(
#     list(mdl, minerror, trueBeta, sigma, testData),
#     getPredErr, use.formula = TRUE
#   )
}, .id = "Model")
err_out
err_out + minerr
norm(err_out + minerr, type = "F")
sqrt(sum(diag(err_out + minerr)))
load("scripts/output/unsync/all-in-one.rdata")
ls()
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr)))
}, .id = "Model")
source("scripts/01-setup.r")
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr)))
}, .id = "Model")
source('~/Dropbox/Papers/01-simrel-m/scripts/00-function.r')
predErr <- map_df(`names<-`(mdls, mdls), function(mdl){
coef %>%
group_by(design, replicate, id) %>%
select_(mdl = mdl) %>%
left_join(trueValue) %>%
do(with(., pmap_df(list(mdl, minerror, trueBeta, sigma), getPredErr)))
}, .id = "Model")
predErr
predErr %>%
mutate(without_norm = sqrt(without_norm)) %>%
gather("ErrorType", value = "pred_err", without_norm, with_norm) %>%
group_by(Model, design, comp, ErrorType) %>%
summarise(
pred_err = mean(pred_err)
) %>%
ggplot(aes(comp, pred_err, color = ErrorType)) +
geom_line() + geom_point() +
facet_grid(design ~ Model) +
theme(legend.position = "top")
predErr %>%
mutate(without_norm = sqrt(without_norm)) %>%
gather("ErrorType", value = "pred_err", sqrt(without_norm), with_norm) %>%
group_by(Model, design, comp, ErrorType) %>%
summarise(
pred_err = mean(pred_err)
) %>%
ggplot(aes(comp, pred_err, color = ErrorType)) +
geom_line() + geom_point(size = 0.5) +
facet_grid(design ~ Model) +
theme(legend.position = "top")
predErr %>%
mutate(without_norm = sqrt(without_norm)) %>%
gather("ErrorType", value = "pred_err", without_norm, with_norm) %>%
group_by(Model, design, comp, ErrorType) %>%
summarise(
pred_err = mean(pred_err)
) %>%
ggplot(aes(comp, pred_err, color = ErrorType)) +
geom_line() + geom_point(size = 0.5) +
facet_grid(design ~ Model) +
theme(legend.position = "top")
bookdown::render_book()
bookdown::render_book(".")
bookdown::serve_book()
bookdown::clean_book()
