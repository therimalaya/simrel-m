library(bookdown)
bookdown::render_book(".")
bookdown::render_book(".")
bookdown::render_book(".")
bookdown::render_book(".")
bookdown::serve_book(".")
q("no")
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
plts <- list(
rotation = plot(cov.df(sim.obj, "rotation"), "relpred") + ggtitle("Rotation Matrix"),
relpos = plot(cov.df(sim.obj, type = "relpos", ordering = TRUE), "relpos") + ggtitle("Principal Covariance Matrix"),
relpred = plot(cov.df(sim.obj, type = "relpred"), type = "relpred") + ggtitle("Covariance Matrix of simulated Data"),
ncol = 3
)
plt <- do.call(share_legend, plts)
ggsave(plt, width = 12, height = 4, dev = "svg", filename = "cov-plot.svg")
ggsave(plt, width = 12, height = 4, dev = "svg", filename = "cov-plot.svg")
library(svglite)
ggsave(plt, width = 12, height = 4, dev = "svg", filename = "cov-plot.svg")
plt
ggsave(do.call(share_legend, plts), width = 12, height = 4, dev = "svg", filename = "cov-plot.svg")
plts <- list(
rotation = plot(cov.df(sim.obj, "rotation"), "relpred") + ggtitle("Rotation Matrix"),
relpos = plot(cov.df(sim.obj, type = "relpos", ordering = TRUE), "relpos") + ggtitle("Principal Covariance Matrix"),
relpred = plot(cov.df(sim.obj, type = "relpred"), type = "relpred") + ggtitle("Covariance Matrix of simulated Data"),
ncol = 3
)
plts <- do.call(share_legend, plts)
plts
str(plts)
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
plt
plts <- list(
rotation = plot(cov.df(sim.obj, "rotation"), "relpred") + ggtitle("Rotation Matrix"),
relpos = plot(cov.df(sim.obj, type = "relpos", ordering = TRUE), "relpos") + ggtitle("Principal Covariance Matrix"),
relpred = plot(cov.df(sim.obj, type = "relpred"), type = "relpred") + ggtitle("Covariance Matrix of simulated Data"),
ncol = 3
)
plts <- do.call(share_legend, plts)
plts
ggsave(plts, width = 12, height = 4, dev = "svg", filename = "cov-plot.svg")
plts
ggplot2::ggplot_build(plts)
plts
plot(plts)
plts <- do.call(share_legend, plts)
ggsave(plot(plts), width = 12, height = 4, dev = "svg", filename = "cov-plot.svg")
plts <- list(
rotation = plot(cov.df(sim.obj, "rotation"), "relpred") + ggtitle("Rotation Matrix"),
relpos = plot(cov.df(sim.obj, type = "relpos", ordering = TRUE), "relpos") + ggtitle("Principal Covariance Matrix"),
relpred = plot(cov.df(sim.obj, type = "relpred"), type = "relpred") + ggtitle("Covariance Matrix of simulated Data"),
ncol = 3
)
plts <- do.call(share_legend, plts)
plts
gridExtra::arrangeGrob(plts)
plts
svg(plot(plts), filename = "cov-plot.svg", width = 12, height = 4, onefile = T)
svg(plot(plts), filename = "cov-plot.svg", width = 12, height = 4)
svg(plot(plts), filename = "cov-plot.svg", width = 900, height = 300)
svg(plot(plts), filename = "cov-plot.svg", width = 900, height = 300, pointsize = 1)
svg(plot(plts), filename = "cov-plot.svg", width = 900, height = 300, pointsize = 1)
?svg
svg()
plot(plts)
dev.off()
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
ggsave(plts, width = 15, height = 5, dev = "svg", filename = "images/cov-plot.svg")
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
?theme
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/cov-plot.R')
sim.obj[["X"]]
sim.obj[["X"]]
melt(sim.obj[["X"]])
head(melt(sim.obj[["X"]]))
flatten_list <- function(list, yvar.name, xvar.name) {
out <- apply(melt(unname(list)), 1, function(l) paste0(c(xvar.name, yvar.name), l))
`names<-`(out[2, ], out[1, ])
}
flatten_list(sim.obj$relpred, "Y", "X")
dff <- melt(sim.obj[["X"]])
dff$rel.resp <- flatten_list(sim.obj$relpred, "Y", "X")[dff$Var2]
head(dff)
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2)
ggplot(dff, aes(as.numeric(Var1), value, color = rel.resp)) + geom_point() + facet_grid(.~Var2)
dff$Var1 <- as.numeric(as.factor(dff$Var1))
ggplot(dff, aes(as.numeric(Var1), value, color = rel.resp)) + geom_point() + facet_grid(.~Var2)
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2)
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + theme_void()
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + theme_minimal()
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + theme_minimal() + labs(x = "", y = "") + theme(axis.text.x = element_blank())
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + theme_minimal() + labs(x = "", y = "") + scale_x_continuous(breaks = NA)
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + theme_minimal() + labs(x = "", y = "") + scale_x_continuous(breaks = NULL)
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL)
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(color = NA))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA, color = "darkgray"))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA, color = "#ffeeee", alpha = 0.5))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA, color = "#ffeeee"))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA, color = "#eeeeee"))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA, color = "#eeeeee"))
dff$rel.resp <- flatten_list(sim.obj$relpos, "Y", "X")[dff$Var2]
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point() + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA, color = "#eeeeee"))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA, color = "#eeeeee"))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA, color = "#eeeeee"), strip.text = element_text(angle = 90, hjust = 1))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_minimal() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_linedraw() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_void() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_void() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1), axis.text.y = element_text(color = "black"))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_void() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_void() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1), axis.line.y = element_line())
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_void() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1), axis.text.y = element_text())
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_void() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1), axis.text.y = element_text(angle = 0))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_void() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1))
ggplot(dff, aes(Var1, value, color = rel.resp)) + geom_point(size = 0.5) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_void() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1), legend.position = "bottom")
ggplot(dff, aes(Var1, value, fill = rel.resp)) + geom_point(size = 0.5, shape = 21) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_void() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1), legend.position = "bottom")
ggplot(dff, aes(Var1, value, fill = rel.resp)) + geom_point(shape = 21) + facet_grid(.~Var2) + labs(x = "", y = "") + scale_x_continuous(breaks = NULL) + theme_void() + theme(panel.background = element_rect(fill = NA), strip.text = element_text(angle = 90, hjust = 1), legend.position = "bottom")
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/obs-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/obs-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/obs-plot.R')
source('/mnt/DocSync/Dropbox/Papers/01-simrel-m/rmarkdown/simrel-m/images/obs-plot.R')
sim.obj[['Sigma']]
sigma <- sim.obj[['Sigma']]
dimnames(sigma) <- list(c(paste0("Y", 1:sim.obj$m), paste0("X", 1:sim.obj$p)), c(paste0("Y", 1:sim.obj$m), paste0("X", 1:sim.obj$p)))
sigma
round(sigma, 3)
sigma.df <- melt(sigma)
head(sigma.df)
sim.obj$relpred
flatten_list(sim.obj$relpred)
flatten_list(sim.obj$relpred, "X", "W")
flatten_list(sim.obj$ypos, "Y", "W")
flatten_list(sim.obj$ypos, "W", "Y")
pred.pos <- flatten_list(sim.obj$relpred, "X", "W")
ypos <- flatten_list(sim.obj$ypos, "W", "Y")
pred.pos
ypos
pred.pos[ypos]
ypos[pred.pos]
sapply(pred.pos, function(x) names(x) %in% ypos)
sapply(pred.pos, function(x) which(names(x) %in% ypos))
sapply(pred.pos, function(x) which(names(x) == ypos))
pred.pos
ypos
sigma.df$Var1
pred.pos <- flatten_list(sim.obj$relpred, "W", "X")
pred.pos
ypos <- flatten_list(sim.obj$ypos, "Y", "W")
ypos
pred.pos[ypos]
ypos[pred.pos]
rbind(pred.pos, ypos[pred.pos])
rbind(pred.pos, ypos = ypos[pred.pos])
