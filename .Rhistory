plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = 10, y = Inf,
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties"
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model)) +
geom_point(shape = 21, size = 0.5, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model), linetype = 2) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 0.5) +
geom_text(aes(label = label, x = Inf, y = Inf), data = plot_label,
hjust = 1, vjust = 1.5, family = "mono", size = rel(4)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = NULL,
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_grid(. ~ design, scale = 'free_y', labeller = label_both) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 2)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = Inf, y = c(Inf, Inf, -Inf, -Inf),
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties"
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model)) +
geom_point(shape = 21, size = 0.5, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model), linetype = 2) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 0.5) +
geom_text(aes(label = label, x = Inf, y = y), data = plot_label,
hjust = 1, vjust = 1.2, family = "mono", size = rel(3.2)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = NULL,
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_grid(. ~ design, scale = 'free_y', labeller = label_both) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 2)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = Inf, y = c(Inf, Inf, -Inf, -Inf),
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties",
v = c(1.2, 1.2, -1.2, -1.2)
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model)) +
geom_point(shape = 21, size = 0.5, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model), linetype = 2) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 0.5) +
geom_text(aes(label = label, x = Inf, y = y, vjust = v),
data = plot_label,
hjust = 1, family = "mono", size = rel(3.2)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = NULL,
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_grid(. ~ design, scale = 'free_y', labeller = label_both) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 2)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = Inf, y = c(Inf, Inf, -Inf, -Inf),
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties",
v = c(1.2, 1.2, -1.2, -1.2)
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model), size = 0.5) +
geom_point(shape = 21, size = 0.5, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model),
linetype = 2, size = 0.5) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 0.4) +
geom_text(aes(label = label, x = Inf, y = y, vjust = v),
data = plot_label,
hjust = 1, family = "mono", size = rel(3.2)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = NULL,
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_grid(. ~ design, scale = 'free_y', labeller = label_both) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 2)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = Inf, y = c(Inf, Inf, -Inf, -Inf),
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties",
v = c(1.2, 1.2, -1.2, -1)
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model), size = 0.5) +
geom_point(shape = 21, size = 0.5, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model),
linetype = 2, size = 0.5) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 0.4) +
geom_text(aes(label = label, x = Inf, y = y, vjust = v),
data = plot_label,
hjust = 1, family = "mono", size = rel(4)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = NULL,
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_wrap( ~ design, labeller = label_both) +
theme_gray(base_size = 13) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 2)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = Inf, y = c(Inf, Inf, -Inf, -Inf),
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties",
v = c(1.2, 1.2, -1.2, -1)
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model), size = 0.5) +
geom_point(shape = 21, size = 0.5, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model),
linetype = 2, size = 0.5) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 0.4) +
geom_text(aes(label = label, x = Inf, y = y, vjust = v),
data = plot_label,
hjust = 1.1, family = "mono", size = rel(4)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = NULL,
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_wrap( ~ design, labeller = label_both) +
theme_gray(base_size = 13) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 2)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = Inf, y = c(Inf, Inf, -Inf, -Inf),
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties",
v = c(1.2, 1.2, -1.2, -1)
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model), size = 0.8) +
geom_point(shape = 21, size = 0.5, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model),
linetype = 2, size = 0.8) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 0.6) +
geom_text(aes(label = label, x = Inf, y = y, vjust = v),
data = plot_label,
hjust = 1, family = "mono", size = rel(4)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = NULL,
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_wrap( ~ design, labeller = label_both) +
theme_gray(base_size = 14) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = Inf, y = c(Inf, Inf, -Inf, -Inf),
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties",
v = c(1.2, 1.2, -1.2, -1)
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model), size = 0.5) +
geom_point(shape = 21, size = 0.5, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model),
linetype = 2, size = 0.5) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 0.6) +
geom_text(aes(label = label, x = Inf, y = y, vjust = v),
data = plot_label,
hjust = 1, family = "mono", size = rel(4)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = NULL,
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_wrap( ~ design, labeller = label_both) +
theme_gray(base_size = 14) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = Inf, y = c(Inf, Inf, -Inf, -Inf),
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties",
v = c(1.2, 1.2, -1.2, -1)
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model), size = 0.5) +
geom_point(shape = 21, size = 0.5, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model),
linetype = 2, size = 0.5) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 0.8) +
geom_text(aes(label = label, x = Inf, y = y, vjust = v),
data = plot_label,
hjust = 1, family = "mono", size = rel(4)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = NULL,
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_wrap( ~ design, labeller = label_both) +
theme_gray(base_size = 14) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = Inf, y = c(Inf, Inf, -Inf, -Inf),
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties",
v = c(1.2, 1.2, -1.2, -1)
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model), size = 0.5) +
geom_point(shape = 21, size = 0.5, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model),
linetype = 2, size = 0.5) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 1) +
geom_text(aes(label = label, x = Inf, y = y, vjust = v),
data = plot_label,
hjust = 1, family = "mono", size = rel(4)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = NULL,
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_wrap( ~ design, labeller = label_both) +
theme_gray(base_size = 14) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
plot_label <- avg_pred_err %>%
ungroup() %>%
select(R2, gamma, design) %>%
unique() %>%
transmute(
design = unique(design),
Model = NA,
x = Inf, y = c(Inf, Inf, -Inf, -Inf),
label = paste0("R2: ", R2, "\ngamma: ", gamma),
type = "Properties",
v = c(1.2, 1.2, -1.2, -1)
)
plt <- avg_pred_err %>%
filter(Model != "OLS") %>%
mutate(type = "Plot") %>%
ggplot(aes(comp, pred_err, fill = Model)) +
geom_ribbon(aes(ymax = upper, ymin = lower), alpha = 0.1) +
geom_line(aes(color = Model), size = 0.5) +
geom_point(shape = 21, size = 1, aes(color = Model)) +
geom_hline(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(yintercept = pred_err, color = Model),
linetype = 2, size = 0.5) +
geom_point(data = avg_pred_err %>%
filter(Model == "OLS", comp == 1),
aes(y = pred_err, color = Model), size = 1) +
geom_text(aes(label = label, x = Inf, y = y, vjust = v),
data = plot_label,
hjust = 1, family = "mono", size = rel(4)) +
scale_size_continuous(range = c(0.1, 2), breaks = NULL) +
scale_fill_discrete(l = 40) +
labs(x = "Number of Components",
y = expression(paste('Prediction Error (||', alpha, '||'[F], ")"))) +
facet_wrap( ~ design, labeller = label_both) +
theme_gray(base_size = 14) +
theme(legend.position = "bottom") +
scale_x_continuous(breaks = seq(0, 10, 1)) +
ggtitle("Prediction Error",
sub = "Averaged over 20 replicated Datasets of same properties") +
guides(color = guide_legend(nrow = 1),
fill = guide_legend(nrow = 1))
plot(plt)
avg_pred_err <- myData %>%
group_by(Model, design, comp, R2, gamma) %>%
do(mean_se(.$pred_err)) %>%
rename(pred_err = y, upper = ymax, lower = ymin)
avgPredErr <- avg_pred_err %>%
group_by(Model, design) %>%
summarise(
comp = comp[which.min(pred_err)],
pred_err = min(pred_err),
label = paste0("(", comp, ", ", round(pred_err, 2), ")")
)
avgPredErr_lbl <- avgPredErr %>%
select(-comp, -pred_err) %>%
mutate(design = paste0("Design: ", design)) %>%
spread(design, label)
avgPredErr_idx <- avgPredErr %>%
select(-comp, -label) %>%
mutate(design = paste0("Design: ", design)) %>%
spread(design, pred_err) %>%
ungroup() %>%
select(-Model) %>%
do({sapply(., function(x) x == min(x)) %>% as_tibble()}) %>%
as.matrix() %>%
which(arr.ind = TRUE)
avgPredErr_idx[, "col"] <- avgPredErr_idx[, "col"] + 1
avgPredErr_lbl %>%
pander(emphasize.strong.cells = avgPredErr_idx,
# emphasize.verbatim.cols = 2:ncol(.),
emphasize.italics.cells = avgPredErr_idx,
emphasize.italics.cols = 1,
split.cells = Inf, justify = "lcccc",
caption = "(\\#tab:min-error) Minimum average prediction error (number of components, prediction error)")
avgPredErr
avgPredErr %>% ungroup() %>% group_by(design) %>% summarize(pred_err = min(pred_err))
avgPredErr %>%
ungroup() %>%
group_by(design) %>%
summarize(
Model = Model[which.min(pred_err)],
pred_err = min(pred_err)
)
topBest <- avgPredErr %>%
ungroup() %>%
group_by(design) %>%
summarize(
Model = Model[which.min(pred_err)],
pred_err = min(pred_err)
)
topBest
topBest[1:2, predErr]
topBest[1:2, "predErr"]
topBest[1:2, "pred_err"]
topBest$pred_err[1:2]
library(webshot)
install.packages("webshots")
install.packages("webshot")
library(webshot)
webshot("https://therimalaya.shinyapps.io/AppSimulatr/", file = "~/Desktop/AppSimulatr.png")
ggplot_simulatr(sim.obj)
ls()
simObj
